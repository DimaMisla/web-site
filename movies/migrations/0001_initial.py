# Generated by Django 4.2.2 on 2023-10-27 15:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('year', models.IntegerField()),
                ('time', models.IntegerField()),
                ('rating', models.FloatField()),
                ('meta_score', models.FloatField()),
                ('gross', models.FloatField()),
                ('description', models.TextField()),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movies', to='movies.certification')),
                ('director', models.ManyToManyField(related_name='movies', to='movies.director')),
                ('genre', models.ManyToManyField(related_name='movies', to='movies.genre')),
                ('stars', models.ManyToManyField(related_name='movies', to='movies.star')),
            ],
        ),
    ]
